{"mappings":"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","sources":["src/index.js","src/baseElements/KrStateElement/KrStateElement.js","src/baseElements/KrThingElement/KrThingElement.js","src/baseElements/KrThingElement/templates/card.js","src/baseElements/KrThingElement/templates/record.js","src/baseElements/KrThingsElement/KrThingsElement.js","src/baseElements/KrThingsElement/templates/base.js","src/baseElements/KrPropertyElement/KrPropertyElement.js","src/baseElements/KrValueElement/KrValueElement.js","src/baseElements/KrListItemElement/KrListItemElement.js","src/baseElements/KrListItemElement/template/card.js","src/action/KrActionElement/KrActionElement.js","src/action/KrActionElement/template/icon.js","src/action/KrActionMenuElement/KrActionMenuElement.js","src/action/KrActionMenuElement/template/menu.js","src/action/KrActionStatusElement/KrActionStatusElement.js","src/widgets/table/KrTable/KrTable.js","src/widgets/table/KrTable/template/table.js","src/KrAvatar/KrAvatar.js","src/KrAvatar/template/avatar.js","src/widgets/image/KrImage/KrImage.js","src/widgets/image/KrImage/template/image.js","src/widgets/image/KrImage/template/imageAvatar.js","src/widgets/image/KrImage/template/imageSm.js","src/widgets/image/KrImage/template/imageMd.js","src/widgets/image/KrImage/template/imageLg.js","src/form/KrFormSm/KrFormSm.js","src/form/KrFormSm/template/formSm.js","src/form/KrFormInput/KrFormInput.js","src/form/KrFormInput/template/formInput.js","src/form/KrFormInputValue/KrFormInputValue.js"],"sourcesContent":["import { KrStateElement } from './baseElements/KrStateElement/KrStateElement.js'\nimport { KrThingElement } from './baseElements/KrThingElement/KrThingElement.js'\nimport { KrThingsElement } from './baseElements/KrThingsElement/KrThingsElement.js'\nimport { KrPropertyElement } from './baseElements/KrPropertyElement/KrPropertyElement.js'\nimport { KrValueElement } from './baseElements/KrValueElement/KrValueElement.js'\nimport { KrListItemElement } from './baseElements/KrListItemElement/KrListItemElement.js'\n\nimport { KrActionElement } from './action/KrActionElement/KrActionElement.js'\nimport { KrActionMenuElement } from './action/KrActionMenuElement/KrActionMenuElement.js'\nimport { KrActionStatusElement } from './action/KrActionStatusElement/KrActionStatusElement.js'\n\n\nimport { KrTable } from './widgets/table/KrTable/KrTable.js'\n\n\nimport { KrAvatar } from './KrAvatar/KrAvatar.js'\n\nimport { KrImage, KrImageSm, KrImageMd, KrImageLg, KrImageAvatar } from './widgets/image/KrImage/KrImage.js'\n\nimport { KrFormSm } from './form/KrFormSm/KrFormSm.js'\nimport { KrFormInput } from './form/KrFormInput/KrFormInput.js'\nimport { KrFormInputValue } from './form/KrFormInputValue/KrFormInputValue.js'\n\n\nexport var KrElements = {\n\n    KrState: KrStateElement,\n    KrThing: KrThingElement,\n    KrThings: KrThingsElement,\n    KrProperty: KrPropertyElement,\n    KrValue: KrValueElement,\n    KrListItem: KrListItemElement,\n    KrAction: KrActionElement,\n    KrActionMenu: KrActionMenuElement,\n    KrActionStatus: KrActionStatusElement,\n    KrTable: KrTable,\n    KrAvatar: KrAvatar,\n    KrImage: KrImage,\n    KrImageSm: KrImageSm,\n    KrImageMd: KrImageMd, \n    KrImageLg: KrImageLg,\n    KrImageAvatar: KrImageAvatar,\n    KrFormInput: KrFormInput,\n    KrFormSm: KrFormSm\n    \n}\n\n\n\n\n","\nimport { KrThing } from 'krakenthing';\n\n\nexport class KrStateElement extends HTMLElement {\n    /**\n     * State manager \n     */\n\n    constructor() {\n        super();\n\n        this._db = []\n        this.record_type = \"ItemList\"\n        this.record_id = String(crypto.randomUUID())\n        this.record_ref = { \"@type\": this.record_type, \"@id\": this.record_id }\n    }\n\n    async initObject() {\n\n        this.setDefaultId()\n\n        //this.contentElement.contentEditable = true\n        this.setMutationObserver()\n\n    }\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    setDefaultId() {\n\n        if (!this.id || this.id == null) {\n            this.id = String(crypto.randomUUID())\n        }\n    }\n\n\n    \n\n\n    // -----------------------------------------------------\n    //  get set \n    // -----------------------------------------------------\n\n\n    getThing(record_type, record_id) {\n\n        \n        \n        if (record_type && record_type != null) {\n            if (record_id && record_id != null) {\n                \n                return this._get_record(record_type, record_id)\n            } else {\n                return this._get_records_for_type(record_type)\n            }\n\n        } else {\n            return this._get_records_all()\n        }\n    }\n\n\n    _get_records_all() {\n        let results = []\n\n        for(let t of this._db){\n            results.push(t)     \n        }\n       \n        return results\n    }\n\n    _get_records_for_type(record_type) {\n\n        let results = []\n\n        for(let t of this._db){\n            if(t.record_type == record_type)\n            results.push(t)\n        }\n        return results\n    }\n\n\n    _get_record(record_type, record_id) {\n\n\n        for(let t of this._db){\n            if(t.record_type == record_type && t.record_id == record_id)\n            return t\n        }\n        return null\n\n    }\n\n\n    setThing(record) {\n\n        if (!(record instanceof KrThing)){\n            let v = new KrThing()\n            v.record = record\n            record = v\n            \n        }\n\n        this._db.push(record)\n        this.setListenerOnThing(record)\n        \n        for (let r of record.things) {\n            \n            if(record.record_id != r.record_id){\n                this.setThing(r)\n            }\n        }\n       \n        return record\n    }\n\n\n    setListenerOnThing(thing){\n\n        thing.addEventListener('all', event => {\n\n            let t = event.target\n            //console.log('Saving thing', t.record_type, t.record_id, t)\n            //t.api_post()\n\n            \n        })\n\n        \n    }\n\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n\n    dispatchAddAction(record) {\n\n        let eventRecord = {\n            \"@type\": \"addAction\",\n            \"@id\": String(crypto.randomUUID()),\n            \"targetCollection\": this.record_ref,\n            \"object\": record,\n            \"actionStatus\": \"completedActionStatus\",\n            \"timeStart\": new Date(),\n            \"timeEnd\": new Date()\n        }\n        const newEvent = new CustomEvent(\"kr-addAction\", { detail: eventRecord });\n        this.dispatchEvent(newEvent)\n\n        const newEventAll = new CustomEvent(\"kr-all\", { detail: eventRecord });\n        this.dispatchEvent(newEventAll)\n\n    }\n\n    dispatchDeleteAction(record) {\n\n        let eventRecord = {\n            \"@type\": \"deleteAction\",\n            \"@id\": String(crypto.randomUUID()),\n            \"targetCollection\": this.record_ref,\n            \"object\": record,\n            \"actionStatus\": \"completedActionStatus\",\n            \"timeStart\": new Date(),\n            \"timeEnd\": new Date()\n        }\n\n        const newEvent = new CustomEvent(\"kr-deleteAction\", { detail: eventRecord });\n        this.dispatchEvent(newEvent)\n\n        const newEventAll = new CustomEvent(\"kr-all\", { detail: eventRecord });\n        this.dispatchEvent(newEventAll)\n\n    }\n\n    dispatchUpdateAction(record) {\n\n        let eventRecord = {\n            \"@type\": \"updateAction\",\n            \"@id\": String(crypto.randomUUID()),\n            \"targetCollection\": this.record_ref,\n            \"object\": record,\n            \"actionStatus\": \"completedActionStatus\",\n            \"timeStart\": new Date(),\n            \"timeEnd\": new Date()\n        }\n\n        const newEvent = new CustomEvent(\"kr-updateAction\", { detail: eventRecord });\n        this.dispatchEvent(newEvent)\n\n        const newEventAll = new CustomEvent(\"kr-all\", { detail: eventRecord });\n        this.dispatchEvent(newEventAll)\n\n    }\n\n\n    // -----------------------------------------------------\n    //  Mutation observer \n    // -----------------------------------------------------\n\n    setMutationObserver() {\n\n        const callback = (mutationList, observer) => {\n            for (const mutation of mutationList) {\n                if (mutation.type === \"childList\") {\n                }\n            }\n        };\n\n\n        // Create an observer instance linked to the callback function\n        const observer = new MutationObserver(callback);\n\n        const config = { attributes: true, attributeOldValue: true, childList: true, subtree: true };\n\n        // Start observing the target node for configured mutations\n        observer.observe(this, config);\n\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n\n    connectedCallback() {\n        this.classList.add('kr-state')\n        this.initObject()\n    }\n\n    disconnectedCallback() {\n    }\n\n    adoptedCallback() {\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n    }\n\n}\n\ncustomElements.define(\"kr-state\", KrStateElement);\n\n\n\n\n\nfunction flattenThings(record) {\n\n    let results = []\n\n    if (Array.isArray(record)) {\n\n        for (let r of record) {\n            results = results.concat(flattenThings(r))\n        }\n\n    } else if (typeof record === 'object') {\n\n        if (record['@type']) {\n            results.push(record)\n        }\n\n        for (let k in record) {\n            results = results.concat(flattenThings(record[k]))\n        }\n    }\n    return results\n}\n\n\n\n","import { KrThing } from 'krakenthing'\n\n\n\n\nimport { card } from './templates/card.js'\nimport { record as recordElement } from './templates/record.js'\nimport * as liquidjs from 'liquidjs';\nconst engine = new liquidjs.Liquid()\n\n\n\nexport class KrThingElement extends HTMLElement {\n    constructor() {\n        super();\n        this._thing = null\n        this._record = null\n        this.htmlTemplate = card()            // HTML content as template\n        this.htmlContent = null               // Actual HTML content\n        this.config = {}\n        this.useBestRecord = false\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject(){\n\n        this.initKrState()\n\n        this.setDefaultId()\n        await this.renderHTML()\n        this.showContent()\n        \n      \n    }\n\n    setDefaultId(){\n\n        if (!this.id || this.id == null){\n            this.id = String(crypto.randomUUID())\n        }\n    }\n\n\n    setTemplate(templateID){\n\n        if (templateID == \"card\"){\n            this.htmlTemplate = card()\n        }\n        if (templateID == \"record\"){\n            this.htmlTemplate = recordElement()\n        }\n    }\n\n\n    initKrState(){\n\n\n        let krState = document.getElementsByClassName('KR-STATE')\n        if(!krState){\n            document.body.appendChild(document.createElement('KR-STATE'))\n        }\n        \n    }\n\n    \n    loadRecordFromAttribute(){\n\n        if (this.dataset.record){\n            this.record = JSON.parse(this.dataset.record)\n        }\n\n        if (this.dataset.recordType){\n            this.record_type = this.dataset.recordType\n        }\n\n        if (this.dataset.recordId){\n            this.record_id = this.dataset.recordId\n        }\n    }\n\n    loadRecordFromValueElement(){\n\n        \n        if(this.closest('.kr-value')){\n            this.record = this.closest('.kr-value')?.value\n            \n        }\n        \n    }\n    \n    \n    // -----------------------------------------------------\n    //  Content renderer \n    // -----------------------------------------------------\n\n\n    get elementRecord(){\n        // Record with added \n       \n        if (! this.thing ) { return {} }\n        let elementRecord = this.thing.record || {}\n\n        //elementRecord.potentialAction = this.potentialActions\n\n        return elementRecord\n            \n\n    }\n\n\n    \n    async renderHTML(){\n\n        \n        let tpl = await engine.parse(this.htmlTemplate)\n        this.htmlContent = await engine.render(tpl,  {item: this.elementRecord, config: this.config})\n\n    }\n    \n    showContent(){\n        this.innerHTML = this.htmlContent\n    }\n\n    \n  \n    \n    // -----------------------------------------------------\n    //  Attributes \n    // -----------------------------------------------------\n\n\n    get krState(){\n\n        let krState =  document.getElementsByTagName('KR-STATE')?.[0]\n        if(!krState || krState == null){\n            krState = document.body.appendChild(document.createElement('KR-STATE'))\n        }\n        return krState\n    }\n\n    \n    get record_type(){\n        return this.getAttribute('data-record-type') || null\n    }\n\n    set record_type(value){\n        this._record_type = value\n        this.setAttribute('data-record-type', value)\n    }\n\n    get record_id(){\n        return this.getAttribute('data-record-id') || null\n    }\n\n    set record_id(value){\n        this._record_id = value\n        this.setAttribute('data-record-id', value)\n        \n    }\n\n    get record(){\n\n        if(!this.thing) { return {}}\n\n        this._record = this.thing.record\n        \n        return simplify(this.thing.record)\n        \n        \n    }\n\n    set record(value){\n        \n        if(!value || value == null){ return }\n\n        if(!this.thing){\n            let thing = new KrThing()\n            thing.record = value\n            this.thing = thing\n        } \n\n        if(!value['@type']){ value['@type'] = \"Thing\"}\n        this.thing.record = value\n        \n        this.record_type = this.thing.record_type\n        this.record_id =  this.thing.record_id\n        \n        this.initObject()\n       \n    }\n\n    get thing(){\n        if(!this.record_type || this.record_type == null) { return null }\n        if(!this.record_id || this.record_id == null) { return null }\n\n        return this.krState.getThing(this.record_type, this.record_id)\n        \n    }\n\n\n    set thing(value){\n\n        \n        if(!(value instanceof KrThing)){\n            let k = new KrThing()\n            k.record = value\n            value = k\n        }\n        \n        this._thing = value\n        this.krState.setThing(value)\n\n        this.record_type = value.record_type\n        this.record_id = value.record_id\n\n        value.addEventListener('all', event =>{\n            \n            if(this._record != value.record){\n                this._record = value.record\n                this.initObject()\n            }\n            \n        })\n        \n    }\n\n    \n\n\n\n    // -----------------------------------------------------\n    //  Properties \n    // -----------------------------------------------------\n\n\n\n    getValues(propertyID){\n        \n        if(!this.thing){ return [] }\n        \n        let values = this.thing.record?.[propertyID] || []\n        \n        values = ensureArray(values)\n\n        return values\n        \n        \n    }\n\n    \n    getProperty(propertyID){\n\n        if(!this.thing){ return [] }\n        \n        return this.thing.getProperty(propertyID)\n       \n    }\n\n    setProperty(propertyID, value){\n       \n        return this.thing.replaceProperty(propertyID, null, value)\n          \n    }\n    \n    replaceProperty(propertyID, oldValue, newValue, refreshFlag=true){\n        if(this.thing){\n            return this.thing.replaceProperty(propertyID, oldValue, newValue)\n        } else {\n            return null\n        }\n    }\n    addProperty(propertyID, value){\n        if(this.thing){\n            return this.thing.addProperty(propertyID, value)\n        } else {\n            return null\n        }\n    }\n\n    deleteProperty(propertyID, value){\n        \n        if(this.thing){\n            return this.thing.deleteProperty(propertyID, value)\n        } else {\n\n            return null\n            \n        }\n        \n    }\n    \n    // -----------------------------------------------------\n    //  Potential actions \n    // -----------------------------------------------------\n\n\n    findPotentialAction(actionID){\n\n        for(let i of this.potentialActions){\n\n            if (i?.['@id'] == actionID){\n                return i\n            }\n        }\n        return null\n    }\n\n\n    \n    get potentialActions(){\n\n        let actions = []\n        actions.push(this.deleteAction)\n        return actions\n    }\n\n    get deleteAction(){\n        let record = {\n            \"@type\": \"deleteAction\",\n            \"@id\": \"deleteAction\",\n            \"name\": \"delete\",\n            \"image\": {\"@type\": \"ImageObject\", \"contentUrl\": \"./delete.svg\"},\n            \"object\": this.record,\n            \"url\": \"\",\n            \"actionStatus\": \"potentialActionStatus\",\n            \"targetCollection\": \"listItemElement\",\n            \"target\": '',\n        }\n        return record\n    }\n\n    deleteAction(){\n\n    }\n\n\n\n    // -----------------------------------------------------\n    //  State management \n    // -----------------------------------------------------\n\n\n    \n    \n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    \n    connectedCallback() {\n        this.classList.add('kr-thing')\n        this.style.display = \"block\"\n        this.loadRecordFromAttribute()\n        this.loadRecordFromValueElement()\n        this.initObject()\n    }\n\n    disconnectedCallback() {\n    }\n\n    adoptedCallback() {\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n\n        if (['data-record-type', 'data-record-id'].includes(name)){\n            // Initialize from type/id\n        }\n    }\n}\n\ncustomElements.define(\"kr-thing\", KrThingElement);\n\n\n\n// -----------------------------------------------------\n//  Card \n// -----------------------------------------------------\n\nexport class KrCard extends KrThingElement {\n    constructor() {\n        super();\n        this.htmlTemplate = card()\n    }\n}\ncustomElements.define(\"kr-card\", KrCard);\n\n\n\nfunction simplify(data, count=0, origData=null) {\n\n\n    if(origData==null){ origData = data}\n    \n\n    //return data\n    // Remove arrays of 1\n    if (Array.isArray(data)) {\n        // If the array has exactly one element, return that element\n        if (data.length === 1) {\n            return simplify(data[0], count + 1, origData);\n        } else {\n            // Otherwise, process each element in the array\n            return data.map(simplify);\n        }\n    } else if (data !== null && typeof data === 'object') {\n        // If the data is an object, process each key\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = simplify(data[key], count + 1, origData);\n            }\n        }\n        return newData;\n    } else {\n        // If the data is neither an array nor an object, return it as is\n        return data;\n    }\n}\n\n\n\n\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n","\n\nexport function card(){\n\n    return `\n        <div class=\"card mb-3 bg-transparent\" style=\"max-width: 300px;\">\n            <div class=\"row g-0\">\n\n\n\n                <div class=\"col col-sm-4 align-self-center\">\n                    <a href=\"#\" class=\"btn h-100\" data-bs-toggle=\"modal\" data-bs-target=\"#modalID\">\n                        <img src=\"{{item.image.contentUrl}}\" class=\"img-fluid rounded-start\" alt=\"...\" onerror='this.style.display = \"none\"'>\n                    </a>\n                </div>\n\n\n\n                <div class=\"col pt-0 col-sm-8 align-self-top\">\n                    <div class=\"row  mt-0 me-1\">\n                        <span\n                            class=\"mt-0 mb-1 align-self-end text-end justify-content-end kr-action\">{{kr-action}}</span>\n                    </div>\n                    <div class=\"card-body\">\n\n                        <div class=\"row align-self-center\">\n                            <h5 class=\"card-title\">\n                                <font size=\"-1\">{{item.name}}</font>\n                            </h5>\n                            <p class=\"card-text\">\n                                <font size=\"-1\">{{item.url}}</font>\n                            </p>\n\n                        </div>\n                    </div>\n\n\n                    {% for c in parent %}\n\n                        <div class=\"row me-1 mt-0 text-end justify-content-end\">\n                            <p class=\"card-text\"><small class=\"text-body-secondary\">\n                                    <font size=\"-1\">{{ c.name }}</font>\n                                </small></p>\n                        </div>\n\n                    {% endfor %}\n\n\n\n                    {% for c in children %}\n\n                        <div class=\"row me-1 mt-0 text-end justify-content-end\">\n                            <p class=\"card-text\"><small class=\"text-body-secondary\">\n                                    <font size=\"-1\">{{ c.name }}</font>\n                                </small></p>\n                        </div>\n\n                    {% endfor %}\n\n                </div>\n            </div>\n        </div>\n\n        <div class=\"modal fade\" id=\"modalID\" tabindex=\"-1\" aria-labelledby=\"modalIDLabel\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-xl\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">{{heading1}}</h1>\n                        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                    </div>\n                    <div class=\"modal-body\">\n                        {{ content }}\n                    </div>\n\n                </div>\n            </div>\n        </div>`\n}\n\n","\n\nexport function record() {\n\n    return `<div class=\"container\">\n        <h1>Record: {{ item.name }}</h1>\n        <h2>{{ item[\"@type\"] }}</h2>\n\n\n        {% if item.contentUrl %}\n\n            <img src=\"{{ item.contentUrl }}\" class=\"img-fluid rounded-start\" alt=\"...\" onerror='this.style.display = \"none\"'>\n\n        {% endif %}\n\n        {% if item.image and image.contentUrl  %}\n        \n            <img src=\"{{ item.image.contentUrl }}\" class=\"img-fluid rounded-start\" alt=\"...\" onerror='this.style.display = \"none\"'>\n        \n        {% endif %}\n        \n        Values:\n        \n\n\n        <kr-action-status></kr-action-status>\n        \n        {% for pair in item %} \n            {% assign key = pair[0] %} \n            {% assign value = pair[1] %} \n            \n            \n            <div class=\"row\">\n                <div class=\"col col-3\">\n                   {{ key }}:\n                </div>\n        \n                <div class=\"col col-9\">\n\n                    {% if value['@type'] %}\n\n                        {{value.name}}\n                        {{value.givenName}} {{value.familyName}}\n                        {{value.url}}\n                        {{value.contentUrl}}\n                    \n                    {% elsif value.first %}\n\n                        {% for v in value %}\n\n                            {% if v['@type'] %}\n                            \n                                {{v.name}}\n                                {{v.givenName}} {{v.familyName}}\n                                {{v.url}}\n                                {{v.contentUrl}}\n\n                            {% else  %}\n                                 {{ v }}\n                            {% endif %}\n                            \n                        {% endfor %}\n                    \n                    \n                    {% else  %}\n                         {{ value}}\n                    {% endif %}\n                \n                  \n                </div>\n        \n            </div>\n        {% endfor %}\n\n    </div>\n    `\n\n}","\nimport { KrThingElement } from '../KrThingElement/KrThingElement.js'\n\nimport { baseTemplate } from './templates/base.js'\n\nimport * as liquidjs from 'liquidjs'\n\n\n\n//import { Liquid } from 'liquidjs'\nconst engine = new liquidjs.Liquid()\n\n\n\nexport class KrThingsElement extends KrThingElement {\n    constructor() {\n        super();\n\n        // Set template and content for list\n        this.htmlTemplate = baseTemplate()\n        \n        // Set template for listItems\n        this.listItemTemplate = null\n        this.listItemRecordTemplate = null            // Template record for new list items elements\n\n        // Set template for listItem.item content\n        this.listItem_itemTemplate = null\n        \n\n        // Set options\n        this.showSelect = true\n        this.showPosition = true\n        \n\n\n        \n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject(){\n\n        await super.initObject()\n       \n        this.loadRecords()\n\n        this.setEventListenerSelect()\n        this.setEventListenerDrop()\n\n    }\n\n    loadRecords(){\n\n        if(!this.records){return}\n        \n        for (let record of ensureArray(this.records)){\n            this.upsertItemElement(record)\n        }\n        \n    }\n\n  \n    // -----------------------------------------------------\n    //  Element navigation \n    // -----------------------------------------------------\n\n    get krItemListElement(){\n        return this.querySelector('.krItemListElement')\n    }\n\n   \n   \n\n    // -----------------------------------------------------\n    //  Content renderer \n    // -----------------------------------------------------\n\n    async renderHTML(){\n\n        let tpl = await engine.parse(this.htmlTemplate)\n        let r = JSON.parse(JSON.stringify(this.elementRecord))\n        r['itemListElement'] = '<span class=\"krItemListElement\"></span>'\n        this.htmlContent = await engine.render(tpl, r)\n\n    }\n\n    \n    // -----------------------------------------------------\n    //  Select section \n    // -----------------------------------------------------\n\n\n    getSelecteditems(){\n\n        let items = []\n        for(let e of this.krItemListElement.children){\n            if (e.isSelected == true){\n                items.push(e)\n            }\n        }\n        return items\n    }\n\n    \n    get KrSelect(){\n        return this.querySelector('kr-select-all > input')\n    }\n\n    \n    get isSelected(){\n\n        return this.KrSelect.checked\n\n    }\n\n\n    set isSelected(value){\n\n        this.KrSelect.checked = value\n        \n    }\n\n    selectAll(){\n\n        for (let e of this.krItemListElement.children){\n            if(e.isSelected == false){\n                 e.isSelected=true\n            }\n        }\n    }\n\n    selectNone(){\n\n        for (let e of this.krItemListElement.children){\n            if(e.isSelected == true){\n                 e.isSelected=false\n            }\n        }\n    }\n\n    setEventListenerSelect(){\n\n        let m = this\n            this.KrSelect.addEventListener('click', (event)=>{\n\n                if(m.isSelected == true){\n                    this.selectAll()\n                } else {\n                    this.selectNone()\n                }\n\n        })\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Drag drop \n    // -----------------------------------------------------\n\n    \n    setEventListenerDrop(){\n\n        this.addEventListener('dragover', event =>{\n            event.preventDefault()\n        })\n\n        this.addEventListener('drop', event =>{\n\n            let elementID = event.dataTransfer.getData('text/plain')\n            let element = document.getElementById(elementID)\n            if (element.tagName == 'KR-LIST-ITEM' && element.things.record_id != this.record_id){\n\n\n                let itemDrop = event.target.closest('KR-LIST-ITEM')\n\n                \n                // Add record\n                this.record.itemListElement.push(element.record)\n\n                // Create new element\n                let newElement = this.upsertItemElement(element.record)\n\n                // Insert before other item if dropped on one\n                if(itemDrop){\n                    itemDrop.before(newElement)\n                    newElement.resetPosition()\n                } \n            }            \n        })\n    }\n\n\n    \n    // -----------------------------------------------------\n    //  CRUD - Elements\n    // -----------------------------------------------------\n    \n    \n    createItemElement(record){\n        record = this.recordToListItem(record)\n        let newItem = document.createElement(this.listItemTemplate)\n        newItem.itemTemplate = this.listItem_itemTemplate\n        newItem.record = record\n        this.setItemEventListeners(newItem)\n        this.krItemListElement.appendChild(newItem)\n        return newItem\n    }\n\n\n    getItemRecord(record_id){\n        \n        for(let r in this.record.itemListElement){\n            if (r?.[\"@id\"] == record_id){\n                return r\n            }\n        }\n        return null\n    }\n\n    \n    getItemElement(record_type, record_id){\n\n        for (let i of this.krItemListElement?.children || []){\n            if (i.record_type == record_type && i.record_id == record_id){\n                return i\n            }\n        }\n        return null\n    }\n    \n    updateItemElement(record){\n        let itemElement = this.getItemElement(record['@type'], record['@id'])\n        itemElement.record = record\n        return itemElement\n    }\n\n\n    upsertItemElement(record){\n        let itemElement = this.getItemElement(record['@type'], record['@id'])\n        if(itemElement && itemElement != null){\n            return this.updateItemElement(record)\n        } else {\n            return this.createItemElement(record)\n        }\n    }\n\n\n    deleteItemRecord(record_ID){\n\n        this.record.itemListElement = this.record.itemListElement.filter((item) => item?.['@id'] != record_ID);\n    }\n\n    \n    deleteItemElement(record){\n        let itemElement = this.getItemElement(record['@type'], record['@id'])\n        itemElement.remove()\n    }\n\n    \n    recordToListItem(record){\n\n        if (record['@type'] == 'ListItem'){ return record}\n\n        let listItem  = {\n            \"@type\": \"ListItem\",\n            \"@id\": String(crypto.randomUUID()),\n            \"item\": record,\n            \"position\": this.krItemListElement?.children.length || 0\n        }\n        return listItem\n    }\n\n\n\n    setItemEventListeners(item){\n\n        item.addEventListener('kr-click', event => {\n\n            let detail = event.detail\n            const newEvent = new CustomEvent(\"kr-click\", { detail: detail });\n            this.dispatchEvent(newEvent)\n            \n        })\n\n        item.addEventListener('kr-select', event => {\n\n            const newEvent = new CustomEvent(\"kr-select\", { detail: event.detail });\n            this.dispatchEvent(newEvent)\n\n\n        })\n        \n    }\n\n\n\n    // -----------------------------------------------------\n    //  Potential actions \n    // -----------------------------------------------------\n\n\n\n    executeAddAction(){\n\n        if(this.record?.listItemElement|| null  == null){\n            this.record.listItemElement = []\n        }\n        \n        let element = this.createItemElement(this.listItemRecordTemplate)\n        this.record.listItemElement.push(element)\n        \n    }\n\n\n    executeDeleteAction(){\n\n        for(let i of this.getSelecteditems()){\n            this.deleteItemElement(i.record)\n        }\n        this.isSelected = false\n\n    }\n\n    \n    \n    findAction(actionID){\n\n        for(let i of this.potentialActions){\n\n            if (i?.['@id'] == actionID){\n                return i\n            }\n        }\n        return null\n        \n    }\n\n\n    \n    get potentialActions(){\n\n        let actions =[]\n        actions.push(this.addAction)\n        actions.push(this.deleteAction)\n        return actions\n\n    }\n\n\n    get addAction(){\n\n        let item=this\n        let record = {\n            \"@type\": \"addAction\",\n            \"@id\": \"addAction\",\n            \"name\": \"add\",\n            \"image\": {\"@type\": \"ImageObject\", \"contentUrl\": \"./icons/plus.svg\"},\n            \"object\": this.listItemRecordTemplate,\n            \"url\": \"\",\n            \"actionStatus\": \"potentialActionStatus\",\n            \"targetCollection\": \"listItemElement\",\n            \"target\": \"executeAddAction\",\n        }\n        return record\n    }\n\n    get deleteAction(){\n\n        let item=this\n        let record = {\n            \"@type\": \"deleteAction\",\n            \"@id\": \"deleteAction\",\n            \"name\": \"delete\",\n            \"image\": {\"@type\": \"ImageObject\", \"contentUrl\": \"./icons/delete.svg\"},\n            \"object\": \"\",\n            \"url\": \"\",\n            \"actionStatus\": \"potentialActionStatus\",\n            \"targetCollection\": \"listItemElement\",\n            \"target\": \"executeDeleteAction\",\n        }\n        return record\n    }\n\n    \n    // -----------------------------------------------------\n    //  Attributes \n    // -----------------------------------------------------\n\n   \n\n\n    get itemListElement(){\n        return this._record?.itemListElement || []\n    }\n\n    set itemListElement(value){\n        this._record.itemListElement = value\n    }\n    \n    get records(){\n        return this.itemListElement\n    }\n\n    set records(value){\n        this._record = this.recordToList(value)\n    }\n\n    \n    recordToList(record){\n\n        if(Array.isArray(record)){\n            record = {\n                \"@type\": \"ItemList\",\n                \"@id\": String(crypto.randomUUID()),\n                \"name\": \"untitledlist\",\n                \"itemListElement\": record,\n            }\n        }\n        return record\n    }\n    \n  \n}\n\ncustomElements.define(\"kr-things\", KrThingsElement);\n\n\n\n\n\n\nfunction ensureArray(value) {\n    if (Array.isArray(value)) {\n        return value;\n    } else {\n        return [value];\n    }\n}\n","\n\n\nexport function baseTemplate(){\n\n    return `\n        <!-- Title -->\n        <div class=\"row border p-3\">\n            <div class=\"col\">\n                 <h1>List {{ name }} </h1>\n            </div>\n        \n        </div>\n\n        \n        <div class=\"row border p-3\">\n\n            <!-- Selection -->\n            <div class=\"col col-1\">\n                <kr-select-all>\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\n                </kr-select-all>\n            </div>\n\n\n            <!-- TBD -->\n            <div class=\"col col-1\">\n                        P\n            </div>\n\n\n            <!-- Items -->\n            <div class=\"col col-9\">\n            </div>\n\n\n\n            <!-- Actions -->\n            <div class=\"col col-1 \">\n\n\n                <kr-action-menu>\n                </kr-action-menu>\n               \n            </div>\n\n            \n        </div>\n        \n        \n        <div class=\"row border \">\n\n            <div class=\"col m-0 p-0\">\n                {{ itemListElement }}\n            </div>\n\n        </div>`\n\n    }\n\n","\nimport { KrakenSchemas } from 'krakenschema'\n\nimport * as liquidjs from 'liquidjs';\nconst engine = new liquidjs.Liquid()\n\n\n\n\nexport class KrPropertyElement extends HTMLElement {\n    constructor() {\n        super();\n        this.htmlTemplate = ''                // HTML content as template\n        this.htmlContent = null               // Actual HTML content\n        this.config = {}\n        this.values = null\n\n    }\n\n    async initObject(){\n        this.setDefaultId()\n        this.config.propertyID = this.propertyID\n        this.krakenSchema = KrakenSchemas.get(this.propertyID);\n\n        \n        await this.renderHTML()\n        this.showContent()\n\n\n    }\n\n\n\n\n    \n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    \n\n    setDefaultId(){\n\n        if (!this.id || this.id == null){\n            this.id = String(crypto.randomUUID())\n        }\n    }\n\n    async renderHTML(){\n\n        if(this.thing){\n            \n            let tpl = await engine.parse(this.htmlTemplate)\n            this.htmlContent = await engine.render(tpl, {item: this.values, config: this.config})\n            \n        }\n       \n\n    }\n\n    showContent(){\n        this.innerHTML = this.htmlContent\n    }\n\n\n\n    // -----------------------------------------------------\n    //  potentialActions \n    // -----------------------------------------------------\n\n\n    addPropertyValueAction(value){\n\n\n        // Get current value\n\n        if(!this.thing){ return }\n        \n        if(!value || value == null){\n            if (this.krakenSchema?.expectedType?.htmlType == \"object\"){\n                value = {\"@type\": this.krakenSchema?.expectedType?.record_id, \"@id\": String(crypto.randomUUID()) }\n            } else {\n                value = 'test'\n            }\n        }\n      \n        this.thing.thing.addProperty(this.propertyID, value) \n        \n    }\n\n    \n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    \n    get thing(){\n\n        let t = this.closest('.kr-thing')\n        return t\n    }\n\n    get record(){\n\n        return this.thing.record\n    }\n\n    get elementRecord(){\n        return this.thing.elementRecord\n    }\n    \n    get propertyID(){\n        return this.getAttribute('data-property-id')\n    }\n\n    set propertyID(value){\n        return this.setAttribute('data-property-id', value)\n    }\n\n    get values(){\n\n        if(!this.thing){ return null }\n\n        let values = this.thing.getValues(this.propertyID)\n        return values\n        \n    }\n\n    set values(value){\n        return this.setAttribute('data-value', value)\n    }\n\n\n\n    \n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n\n    connectedCallback() {\n        this.classList.add('kr-property')\n        this.initObject()\n    }\n\n    disconnectedCallback() {\n    }\n\n    adoptedCallback() {\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n    }\n\n    \n\n}\n\ncustomElements.define(\"kr-property\", KrPropertyElement);\n\n","\n\n\n\nexport class KrValueElement extends HTMLElement {\n    constructor() {\n        super();\n        \n        this._value = null\n        //this.position = 0\n    }\n\n    async initObject(){\n\n        this.setDefaultId()\n       \n        this.setMutationObserver()\n      \n\n    }\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n\n    setDefaultId(){\n\n        if (!this.id || this.id == null){\n            this.id = String(crypto.randomUUID())\n        }\n    }\n\n\n    loadValueFromAttribute(){\n\n        if (this.dataset.value && this.dataset.value != null && this.dataset.value != \"\"){\n            this.value = JSON.parse(this.dataset.value)\n        }\n\n        \n    }\n\n    \n    \n   \n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n    get contentElement(){\n\n        if (!this.children || this.children.length == 0){\n            let contentElement = document.createElement('div')\n            this.appendChild(contentElement)\n            contentElement.classList.add('kr-value-span')\n        }\n\n        let element = this.querySelector('.kr-value-span')\n        return element\n    }\n\n\n    \n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n\n    get thing(){\n        return this.closest('.kr-thing')\n    }\n\n    get record(){\n        return this.thing.record\n    }\n\n    get propertyID(){\n        return this.getAttribute('data-property-id')\n    }\n\n    set propertyID(value){\n        return this.setAttribute('data-property-id', value)\n    }\n\n\n    get property(){\n        return this.closest('.kr-property')\n    }\n\n    \n    get position(){\n        return this.getAttribute('data-position')\n    }\n\n    set position(value){\n        return this.setAttribute('data-position', value)\n    }\n\n    get values(){\n\n        let values = this.property?.values\n        return values\n        \n    }\n\n    set values(value){\n        this._value = value\n    }\n    \n\n    get value(){\n        let values = this.values\n        if(Array.isArray(values)){\n            return values?.[Number(this.position)]\n        } else {\n            if (Number(this.position) == 0 || !this.position || this.position == \"\"){\n                return values\n            } else {\n                return null\n            }\n        }\n        \n    }\n\n    set value(value){\n        \n        this._value = value\n    }\n    \n    get valueElement(){\n        return this.contentElement.innerText\n    }\n\n    set valueElement(value){\n        this.contentElement.innerText = value\n    }\n\n\n\n\n    // -----------------------------------------------------\n    //  potentialActions \n    // -----------------------------------------------------\n\n    addPropertyValueAction(value){\n\n        this.thing.addProperty(this.propertyID, value)\n        this.value = value\n    }\n\n    replacePropertyValueAction(value, refreshFlag=true){\n\n        if(this.value != value){\n            this.thing.replaceProperty(this.propertyID, this.value, value, refreshFlag)\n            \n        }\n    }\n\n    deletePropertyValueAction(value){\n\n        this.thing.removeProperty(this.propertyID, value)\n        this.value = null\n        this.remove()\n    }\n\n    \n    \n    // -----------------------------------------------------\n    //  Mutation observer \n    // -----------------------------------------------------\n\n    setMutationObserver(){\n\n        const callback = (mutationList, observer) => {\n            for (const mutation of mutationList) {\n                if (mutation.type === \"childList\") {\n                } else if (mutation.type === \"attributes\") {\n                } else if (mutation.type === \"characterData\") {\n                    this.thing.record[this.propertyID] = mutation.target.innerText\n                    \n                }\n              }\n            };\n\n\n        // Create an observer instance linked to the callback function\n        const observer = new MutationObserver(callback);\n\n        const config = { attributes: true, attributeOldValue: true, characterData: true, characterDataOldValue: true, childList: true, subtree: true };\n\n        \n        // Start observing the target node for configured mutations\n        observer.observe(this, config);\n        \n    }\n      \n\n    \n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n\n    connectedCallback() {\n        this.classList.add('kr-value')\n        this.loadValueFromAttribute()\n        this.initObject()\n    }\n\n    disconnectedCallback() {\n    }\n\n    adoptedCallback() {\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n    }\n\n\n\n}\n\ncustomElements.define(\"kr-value\", KrValueElement);\n\n","\nimport { card } from './template/card.js'\nimport * as liquidjs from 'liquidjs';\nimport { KrThingElement } from '../KrThingElement/KrThingElement.js'\nconst engine = new liquidjs.Liquid()\n\n\n\n\nexport class KrListItemElement extends KrThingElement {\n    constructor() {\n        super();\n\n\n        // Override template\n        this.htmlTemplate = card()\n\n\n        // Set template for item content\n        this.itemTemplate = null\n\n\n        // \n        this._isSelected = false\n\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject() {\n\n        //\n        await super.initObject()\n\n        this.showItemContent()\n        \n        this.setEventListenerPotentialActions()\n        this.setEventListenerSelect()\n        this.setEventListenerClick()\n        this.setEventListenerReorder()\n\n    }\n\n\n    async refreshObject(){\n        await this.initObject()\n        \n    }\n    \n    resetPosition(){\n\n        let oldValue = this.record.position\n        let newValue = this.position\n\n        if(oldValue != newValue) {\n            \n            this.record.position = this.position\n\n            if (this.thing){\n                this.thing.replaceProperty('position', this.position)\n            }\n\n            this.refreshObject()\n        }\n        \n        if(this.nextItem){\n            this.nextItem.resetPosition()\n        }\n\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Element navigation \n    // -----------------------------------------------------\n\n    get krItemElement() {\n        return this.querySelector('.krItemElement')\n    }\n\n    get KrPotentialActions() {\n        return this.querySelector('kr-potential-actions')\n    }\n\n    get KrSelect() {\n        return this.querySelector('kr-select > input')\n    }\n\n\n    // -----------------------------------------------------\n    //  Content \n    // -----------------------------------------------------\n\n    async renderHTML() {\n\n        let tpl = await engine.parse(this.htmlTemplate)\n        let r = JSON.parse(JSON.stringify(this.record))\n        r['item'] = '<span class=\"krItemElement\"></span>'\n        this.htmlContent = await engine.render(tpl, r)\n\n    }\n\n    showItemContent() {\n        let itemElement = document.createElement(this.itemTemplate)\n        itemElement.record = this.record?.item\n        this.krItemElement.innerHTML = ''\n        this.krItemElement.appendChild(itemElement)\n    }\n\n\n    // -----------------------------------------------------\n    //  Select section \n    // -----------------------------------------------------\n\n    get isSelected() {\n\n        return this.KrSelect.checked\n\n    }\n\n    setEventListenerSelect() {\n\n        let m = this\n        this.KrSelect.addEventListener('click', (event) => {\n\n            if (m.isSelected == true) {\n                m.firstElementChild.classList.add('bg-body-tertiary')\n                this.isSelected = true\n            } else {\n                m.firstElementChild.classList.remove('bg-body-tertiary')\n                this.isSelected = false\n            }\n        })\n    }\n\n\n    // -----------------------------------------------------\n    //  Click section \n    // -----------------------------------------------------\n\n\n\n    setEventListenerClick() {\n\n        let m = this\n        this.addEventListener('click', (event) => {\n            this.isClicked()\n        })\n    }\n    // -----------------------------------------------------\n    //  Potential actions section \n    // -----------------------------------------------------\n\n\n    setEventListenerPotentialActions() {\n\n        let m = this\n        this.addEventListener('mouseenter', (event) => {\n            m.KrPotentialActions.style.visibility = \"visible\"\n            m.firstElementChild.classList.add('bg-body-tertiary')\n\n            m.addEventListener('mouseleave', (event) => {\n                m.KrPotentialActions.style.visibility = \"hidden\"\n                if (this.isSelected == false) {\n                    m.firstElementChild.classList.remove('bg-body-tertiary')\n                }\n            })\n        })\n    }\n\n\n\n\n    // -----------------------------------------------------\n    //  Attributes \n    // -----------------------------------------------------\n\n\n    get isSelected() {\n        return this._isSelected\n    }\n\n    set isSelected(value) {\n\n        let oldValue = this._isSelected\n        this._isSelected = value\n        if (value != oldValue) {\n            const event = new CustomEvent(\"kr-select\", { detail: this.record });\n            this.dispatchEvent(event)\n            this.KrSelect.checked = value\n        }\n    }\n\n\n    recordToListItem(record) {\n\n        if (record['@type'] == 'ListItem') { return record }\n\n        let listItem = {\n            \"@type\": \"ListItem\",\n            \"@id\": String(crypto.randomUUID()),\n            \"item\": record\n        }\n        return listItem\n    }\n\n    get position() {\n        if (this.previousItem == null) {\n            return 0\n        } else {\n            return this.previousItem.position + 1\n        }\n    }\n\n\n    get firstItem() {\n\n        let item = this\n        while(item.previousItem){\n            item=item.previousItem\n        }\n        return item\n    }\n    \n    get previousItem() {\n        let item = this.previousSibling\n\n        while(item && item.tagName != this.tagName){\n            item = item.previousSibling || null\n        }\n        return item\n    }\n    \n    get nextItem() {\n        let item = this.nextSibling\n\n        while(item && item.tagName != this.tagName){\n            item = item.nextSibling || null\n        }\n        return item\n    }\n\n    get things(){\n        return this.closest('kr-things')\n    }\n\n\n    // -----------------------------------------------------\n    //  Drag reorder \n    // -----------------------------------------------------\n\n\n    setEventListenerReorder(){\n\n        \n        \n        this.draggable=\"true\"\n        this.addEventListener('dragstart', event=>{\n            event.dataTransfer.setData(\"text/plain\", event.currentTarget.id);\n            event.currentTarget.classList.add('dragging')\n           \n        })\n        \n        this.addEventListener('dragend', event=>{\n            event.currentTarget.classList.remove('dragging')\n        })\n        \n        this.addEventListener('dragenter', event=>{\n            \n        })\n\n        this.addEventListener('dragleave', event=>{\n            \n            \n        })\n\n        this.addEventListener('dragover', event=>{\n            event.preventDefault()\n        })\n        \n        this.addEventListener('drop', event=>{\n            event.preventDefault()\n\n            \n\n            let elementID = event.dataTransfer.getData('text/plain')\n            let element = document.getElementById(elementID)\n            \n            // If not same list\n            if(element.things.record_id != event.currentTarget.things.record_id) {\n                return\n            }\n            \n            //             \n            event.currentTarget.before(element)\n            \n            // Reset positions\n            this.firstItem.resetPosition()\n\n            // Broadcast event\n            const newEvent = new CustomEvent(\"kr-reorder\", { detail: this.record });\n            this.dispatchEvent(newEvent)\n            \n        })\n    }\n\n    \n    \n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    isClicked() {\n\n        const event = new CustomEvent(\"kr-click\", { detail: this.record });\n        this.dispatchEvent(event)\n    \n    }\n\n    \n\n    connectedCallback() {\n        //console.log(\"Custom element added to page.\");\n    }\n\n    disconnectedCallback() {\n        //console.log(\"Custom element removed from page.\");\n    }\n\n    adoptedCallback() {\n       // console.log(\"Custom element moved to new page.\");\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        //console.log(`Attribute ${name} has changed krListItem.`);\n    }\n\n\n\n\n\n}\n\ncustomElements.define(\"kr-list-item\", KrListItemElement);","\n\nexport function card() {\n\n    return `\n    <div class=\"row border ps-3 pe-3 pt-0 pb-0 hover m-0\">\n        \n        <div class=\"col col-1 mt-3\">\n            <kr-select>\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\">\n            </kr-select>\n         </div>\n        \n        <div class=\"col col-1 mt-3\">\n            <p>{{ position | default: \"\" }}</p>\n        </div>\n\n        <div class=\"col col-12 col-md-9 pt-0 pb-0\">\n            {{ item }}\n        </div>\n        <div class=\"col col-1 p-1 \">\n            <kr-potential-actions style=\"visibility: hidden\"> \n\n                <kr-action-menu>\n               \n                </kr-action-menu>\n            \n            </kr-potential-actions>\n        </div>\n\n    </div>`\n\n}","import { KrThingElement } from '../../baseElements/KrThingElement/KrThingElement.js'\nimport { icon } from './template/icon.js'\n\n\nexport class KrActionElement extends KrThingElement {\n    constructor() {\n        super();\n        this.htmlTemplate = icon()\n        this.initialized = false\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n\n    initObject(){\n\n        super.initObject()\n        \n        this.initEventListeners()\n        \n    }\n\n\n    getPropertiesfromAttributes(){\n        let actionName = this.getAttribute('data-action-name')\n\n\n        //this.thing = this.krState.getThing(this.record_type, this.record_id)\n\n        \n        \n        let record2 = {\n            \"@type\": actionName,\n            \"@id\": String(crypto.randomUUID()),\n            \"name\":  actionName,\n            \"image\": {\"@type\": \"ImageObject\", \"contentUrl\": this.getIcon(actionName)},\n            \"url\": \"\",\n            \"actionStatus\": \"potentialActionStatus\"\n        }\n  \n        //this.record = record\n      \n    }\n\n    \n    getIcon(actionName){\n\n        switch(actionName){\n\n            case \"addAction\":\n                return \"./icons/plus.svg\"\n            case \"addPropertyValueAction\":\n                return \"./icons/plus.svg\"\n            case \"deletePropertyValueAction\":\n                return \"./icons/delete.svg\"\n            default: \n                return \"./icons/test.svg\"\n            \n        }\n    }\n\n\n    \n    initEventListeners(){\n\n        if(this.initialized == false){\n            this.addEventListener('click', (event) =>{\n                console.log('click action', this.id)\n                this.actionExecute()\n\n            })\n            this.initialized = true\n        }\n      \n    }\n\n\n\n    // -----------------------------------------------------\n    //  Process action \n    // -----------------------------------------------------\n   \n\n\n    \n    actionExecute(){\n\n\n        if(this.record_type == \"addAction\"){\n\n            this.executeAddAction()\n\n            \n        } else {\n        \n        let actionName = this.getAttribute('data-action-name')\n        let property = this.closest('.kr-property')\n        \n        switch(actionName){\n\n            case \"addAction\":\n                this.thing.addAction()\n\n            case \"addPropertyValueAction\":\n                property.addPropertyValueAction()\n        }\n        }\n            \n    }\n\n\n    executeAddAction(){\n\n        console.log('add', this.record_type)\n        let o = this.thing.getProperty('object').value\n        \n        let collection = this.thing.getProperty('targetCollection').value\n        \n        let collectionObject = this.krState.getThing(collection.record_type, collection.record_id)\n\n        \n        collectionObject.addProperty('itemListElement', o)\n\n    }\n\n    executeDeleteAction(){\n\n       \n\n    }\n\n    \n    // -----------------------------------------------------\n    //  Events \n    // -----------------------------------------------------\n\n    connectedCallback() {\n        this.initObject()\n        this.getPropertiesfromAttributes()\n    }\n    \n\n}\n\ncustomElements.define(\"kr-action\", KrActionElement);","\n\n\nexport function icon() {\n\n    return `\n\n{{item | json }}\n        <span>\n            <span>\n                \n                    <img src=\"{{ item.image.contentUrl }}\" width=\"32px\" height=\"32px\" class=\"\" alt=\"...\" onerror='this.style.display=\"none\"'> \n    \n    \n            </span>\n    \n            <span>\n    \n    \n                {{ item.name }}\n    \n            </span>\n        </span>\n    `\n\n}","import { KrPropertyElement } from '../../baseElements/KrPropertyElement/KrPropertyElement.js'\nimport { menu } from './template/menu.js'\n\n\nexport class KrActionMenuElement extends KrPropertyElement {\n    constructor() {\n        super();\n        this.htmlTemplate = menu()\n\n\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n\n\n    initObject(){\n\n        this.propertyID = 'potentialAction'\n\n        super.initObject()\n\n    \n\n\n        \n    }\n\n\n  \n\n\n    // -----------------------------------------------------\n    //  Process action \n    // -----------------------------------------------------\n\n\n\n\n    \n\n\n    // -----------------------------------------------------\n    //  Events \n    // -----------------------------------------------------\n\n    connectedCallback() {\n        this.initObject()\n    }\n\n\n}\n\ncustomElements.define(\"kr-action-menu\", KrActionMenuElement);","\n\nexport function menu() {\n\n    return `\n    <div class=\"btn-group p-0 m-0\">\n\n      <a href=\"#\" role=\"button\"  class=\"btn  p-0\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n     \n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\n          <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0\"/>\n        </svg>\n      </a>\n\n     \n      <ul class=\"dropdown-menu\">\n\n\n        {% for action in item %}\n        <li class=\"dropdown-item\">\n        \n          <kr-action data-record-type=\"{{ action['@type'] }}\" data-record-id=\"{{ action['@id'] }}\">\n          </kr-action>\n        \n        </li>\n\n        {% endfor %}\n\n        \n      </ul>\n</div>`\n\n}\n","\nimport { KrValueElement } from '../../baseElements/KrValueElement/KrValueElement.js'\n\n//import { status } from './template/status.js'\n\n\nexport class KrActionStatusElement extends KrValueElement {\n    constructor() {\n        super();\n\n\n        // Override template\n      this.setEventListenerClick()\n\n\n       \n\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    \n\n    // -----------------------------------------------------\n    //  Set listener \n    // -----------------------------------------------------\n\n\n    setEventListenerClick(){\n\n        this.addEventListener('click', event =>{\n\n            this.isClicked()\n        })\n        \n    }\n\n\n\n    \n    // -----------------------------------------------------\n    //  Status \n    // -----------------------------------------------------\n\n\n    assignNextStatus(){\n\n        if(this._value == \"potentialActionStatus\") { this.setCompletedActionStatus() }\n        else if(this._value == \"completedActionStatus\") { this.setActiveActionStatus() }\n            \n        else if(this._value == \"activeActionStatus\") { this.setFailedActionStatus() }\n        else if(this._value == \"failedActionStatus\") { this.setPotentialActionStatus() }\n        else  { this.setPotentialActionStatus() }\n    }\n\n\n    setRecord(value){\n\n        if(this?.thing?.record){\n            this.thing.record.actionStatus = value\n        }\n    }\n\n    setPotentialActionStatus(){\n\n        this._value = \"potentialActionStatus\"\n        this.setRecord('potentialActionStatus')\n        \n        this.contentElement.innerHTML = this.potentialActionStatusIcon()\n    }\n\n    setActiveActionStatus(){\n\n        this._value = \"activeActionStatus\"\n        this.setRecord('activeActionStatus')\n        this.contentElement.innerHTML = this.activeActionStatusIcon()\n    }\n    \n    setCompletedActionStatus(){\n\n        this._value = \"completedActionStatus\"\n        this.setRecord('completedActionStatus')\n        this.contentElement.innerHTML = this.completedActionStatusIcon()\n\n    }\n\n    setFailedActionStatus(){\n\n        this._value = \"failedActionStatus\"\n        this.setRecord('failedActionStatus')\n        this.contentElement.innerHTML = this.failedActionStatusIcon()\n\n    }\n    \n\n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    isClicked() {\n        console.log('click')\n        this.assignNextStatus()\n        const event = new CustomEvent(\"kr-click\", { detail: this._value });\n        this.dispatchEvent(event)\n    }\n\n\n    \n\n    \n\n    connectedCallback() {\n        //console.log(\"Custom element added to page.\");\n        super.connectedCallback()\n        if(!this._value || this._value == null) { this.setPotentialActionStatus()}\n    }\n\n    disconnectedCallback() {\n        //console.log(\"Custom element removed from page.\");\n    }\n\n    adoptedCallback() {\n       // console.log(\"Custom element moved to new page.\");\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        //console.log(`Attribute ${name} has changed krListItem.`);\n\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Comment \n    // -----------------------------------------------------\n\n    completedActionStatusIcon(){\n\n        // checked square \n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-check-square\" viewBox=\"0 0 16 16\">\n              <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\"/>\n              <path d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z\"/>\n            </svg>`\n    }\n\n\n    potentialActionStatusIcon(){\n        // squre\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-square\" viewBox=\"0 0 16 16\">\n  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\"/>\n</svg>`\n    }\n\n    \n\n    activeActionStatusIcon(){\n            //dash square\n        return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-dash-square\" viewBox=\"0 0 16 16\">\n  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\"/>\n  <path d=\"M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8\"/>\n</svg>`\n    }\n\n    failedActionStatusIcon(){\n                //dash square\n            return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-x-square\" viewBox=\"0 0 16 16\">\n  <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z\"/>\n  <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708\"/>\n</svg>`\n        }\n\n\n\n}\n\ncustomElements.define(\"kr-action-status\", KrActionStatusElement);","\n//import { objectTypeInternalSlot } from '@babel/types';\nimport { KrThingElement } from '../../../baseElements/KrThingElement/KrThingElement.js'\n\nimport { table } from './template/table.js'\n\n\nexport class KrTable extends KrThingElement {\n    constructor() {\n        super();\n\n\n        // Override template\n        this.htmlTemplate = table()\n\n\n        // \n        this._isSelected = false\n\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject() {\n\n        //\n\n\n        if(!this.thing){ return }\n        \n        this.config.keys = this.getAttribute('data-keys')\n        this.config.headers = this.getAttribute('data-headers')\n\n        if(!this.config.keys){\n            let items = this.thing.getProperty('itemListElement').values\n            let keys = []\n            for(let item of items){\n\n                for(let k of Object.keys(item.record)){\n                    if(! keys.includes(k)){\n                        \n                    keys.push(k)\n                }\n                }   \n            }\n            \n            this.config.keys = keys\n        }\n        if(!this.config.headers){\n            this.config.headers = this.config.keys\n        }\n        \n        await super.initObject()\n\n    }\n\n    // -----------------------------------------------------\n    //  Attr \n    // -----------------------------------------------------\n\n    \n    \n\n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    isClicked() {\n\n        const event = new CustomEvent(\"kr-click\", { detail: this.record });\n        this.dispatchEvent(event)\n\n    }\n\n\n\n    connectedCallback() {\n        //console.log(\"Custom element added to page.\");\n    }\n\n    disconnectedCallback() {\n        //console.log(\"Custom element removed from page.\");\n    }\n\n    adoptedCallback() {\n       // console.log(\"Custom element moved to new page.\");\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        //console.log(`Attribute ${name} has changed krListItem.`);\n    }\n\n\n\n\n\n}\n\ncustomElements.define(\"kr-table\", KrTable);","\n\n\n\n\nexport function table() {\n\n    return `\n        \n        <table class=\"table table-hover\">\n          <thead class=\"table-dark\">\n            <tr>\n        \n            {% for key in config.keys %} \n                    \n                    \n                    <th scope=\"col\">{{ key }}</th>\n            {% endfor %}\n            \n            </tr>\n          </thead>\n\n          \n          <tbody>\n        \n        \n            {% for record in item.itemListElement %}\n                <tr>\n            \n                {% for pair in record %} \n                    {% assign key = pair[0] %} \n                    {% assign value = pair[1] %} \n        \n        \n\n\n                    {% if record[key][0]['@type']  %}\n\n        \n                        <td scope=\"col\"><kr-avatar data-test=\"test1\" data-record={{ record[key][0] | json }}> </kr-avatar></td>\n                        \n                  \n\n\n                    {% elsif record[key]['@type']  %}\n\n\n                        <td scope=\"col\"><kr-avatar data-test=\"test1\" data-record={{ record[key] | json }}> </kr-avatar></td>\n\n                    {% else %}\n\n                    \n                        <td scope=\"col\">{{record[key]}}</td>\n                    \n                    {% endif %}\n        \n                    \n        \n        \n        \n                {% endfor %}\n        \n                </tr>\n            {% endfor %}\n           \n          </tbody>\n        </table>\n        \n        `\n\n}\n\n\n\n","\nimport { KrThingElement } from '../baseElements/KrThingElement/KrThingElement.js'\n\nimport { avatar } from './template/avatar.js'\n\n\nexport class KrAvatar extends KrThingElement {\n    constructor() {\n        super();\n\n\n        // Override template\n        this.htmlTemplate = avatar()\n\n\n        // \n        this._isSelected = false\n        this.setEventListenerDrag()\n\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject() {\n\n        //\n        await super.initObject()\n\n    }\n\n\n\n\n\n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    setEventListenerDrag(){\n\n        this.draggable=true\n        this.addEventListener('dragstart', event =>{\n\n            event.preventDefault()\n            event.dataTransfer.setData('text', JSON.stringify(this.record, null, 4))\n\n            \n            \n        })\n\n        \n    }\n\n\n\n    \n\n\n\n\n\n}\n\ncustomElements.define(\"kr-avatar\", KrAvatar);","\n\nexport function avatar() {\n\n    return `\n        <div class=\"d-flex justify-content-start align-items-center\">\n            <div class=\"\">\n\n                {% if item.contentUrl %}\n                    <div class=\" me-2 rounded-2 bg-label-secondary\"><img height=\"38px\" width=\"38px\"\n                            src=\"{{ item.contentUrl}}\" alt=\"{{ item.name }}\" class=\"rounded-2\"></div>\n                    \n                {% endif %}\n\n                {% if item.image %}\n                        <div class=\" me-2 rounded-2 bg-label-secondary\"><img height=\"38px\" width=\"38px\"\n                                src=\"{{ item.image.contentUrl }}\" alt=\"{{ item.image.name }}\" class=\"rounded-2\"></div>\n                        \n\n                {% endif %}\n            </div>\n            \n            <div class=\"d-flex flex-column\">\n                <p class=\"text-body text-nowrap mb-0\">{{ item.name }}</p>\n                <small class=\"text-muted text-truncate d-none d-sm-block\"> {{ item.description }}</small>\n            </div>\n        </div>\n\n`\n\n}\n\n","\nimport { KrThingElement } from '../../../baseElements/KrThingElement/KrThingElement.js'\n\nimport { image } from './template/image.js'\nimport { imageAvatar } from './template/imageAvatar.js'\nimport { imageSm } from './template/imageSm.js'\nimport { imageMd } from './template/imageMd.js'\nimport { imageLg } from './template/imageLg.js'\n\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nexport class KrImage extends KrThingElement {\n    constructor() {\n        super();\n\n        this.htmlTemplate = image()\n\n    }\n\n    async initObject() {\n\n        await super.initObject()\n\n    }\n}\ncustomElements.define(\"kr-image\", KrImage);\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nexport class KrImageAvatar extends KrThingElement {\n    constructor() {\n        super();\n\n        this.htmlTemplate = imageAvatar()\n\n    }\n\n    async initObject() {\n\n        await super.initObject()\n\n    }\n}\ncustomElements.define(\"kr-image-avatar\", KrImageAvatar);\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nexport class KrImageSm extends KrThingElement {\n    constructor() {\n        super();\n\n        this.htmlTemplate = imageSm()\n\n    }\n\n    async initObject() {\n\n        await super.initObject()\n\n    }\n}\ncustomElements.define(\"kr-image-sm\", KrImageSm);\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nexport class KrImageMd extends KrThingElement {\n    constructor() {\n        super();\n\n        this.htmlTemplate = imageMd()\n\n    }\n\n    async initObject() {\n\n        await super.initObject()\n\n    }\n}\ncustomElements.define(\"kr-image-md\", KrImageMd);\n\n\n\n// -----------------------------------------------------\n//  Comment \n// -----------------------------------------------------\n\n\nexport class KrImageLg extends KrThingElement {\n    constructor() {\n        super();\n\n        this.htmlTemplate = imageLg()\n\n    }\n\n    async initObject() {\n\n        await super.initObject()\n\n    }\n}\ncustomElements.define(\"kr-image-lg\", KrImageLg);","\n\n\n\nexport function image(){\n\n    return `\n    \n    {% if item.contentUrl %}\n        <div class=\" me-2 bg-label-secondary\">\n            \n            <img \n                class=\"img-fluid\" \n                src=\"{{ item.contentUrl}}\" \n                alt=\"{{ item.name }}\"  \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% elsif item.image %}\n        <div class=\" me-2 bg-label-secondary\">\n            \n            <img\n                class=\"rounded-2 img-fluid\" \n                src=\"{{ item.image.contentUrl }}\" \n                alt=\"{{ item.image.name }}\" \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% endif %}\n\n    `\n}","\n\n\n\nexport function imageAvatar(){\n\n    return `\n    \n    {% if item.contentUrl %}\n        <div class=\" me-2 rounded-2 bg-label-secondary\">\n            \n            <img \n                class=\"rounded-2\" \n                height=\"38px\" \n                width=\"38px\"\n                src=\"{{ item.contentUrl}}\" \n                alt=\"{{ item.name }}\"  \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% elsif item.image %}\n            <div class=\" me-2 rounded-2 bg-label-secondary\">\n                \n                <img\n                    class=\"rounded-2\" \n                    height=\"38px\" \n                    width=\"38px\"\n                    src=\"{{ item.image.contentUrl }}\" \n                    alt=\"{{ item.image.name }}\" \n                    onerror='this.style.display = \"none\"'\n                    >\n            \n            </div>\n\n\n    {% endif %}\n\n    `\n}","\n\n\n\nexport function imageSm(){\n\n    return `\n    \n    {% if item.contentUrl %}\n        <div class=\" me-2 rounded-2 bg-label-secondary\">\n            \n            <img \n                style=\"max-height:100px; max-width:100px; height:auto; width:auto;\"\n                src=\"{{ item.contentUrl}}\" \n                alt=\"{{ item.name }}\"  \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% elsif item.image %}\n        <div class=\" me-2 rounded-2 bg-label-secondary\">\n            \n            <img\n                style=\"max-height:100px; max-width:100px; height:auto; width:auto;\"\n                src=\"{{ item.image.contentUrl }}\" \n                alt=\"{{ item.image.name }}\" \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% endif %}\n\n    `\n}","\n\n\n\nexport function imageMd(){\n\n    return `\n    \n    {% if item.contentUrl %}\n        <div class=\" me-2 rounded-2 bg-label-secondary\">\n            \n            <img \n                style=\"max-height:400px; max-width:400px; height:auto; width:auto;\"\n                src=\"{{ item.contentUrl}}\" \n                alt=\"{{ item.name }}\"  \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% elsif item.image %}\n        <div class=\" me-2 rounded-2 bg-label-secondary\">\n            \n            <img\n                style=\"max-height:400px; max-width:400px; height:auto; width:auto;\"\n                src=\"{{ item.image.contentUrl }}\" \n                alt=\"{{ item.image.name }}\" \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% endif %}\n\n    `\n}","\n\n\n\nexport function imageLg() {\n\n    return `\n    \n    {% if item.contentUrl %}\n        <div class=\"me-2 bg-label-secondary\">\n            \n            <img \n                style=\"max-height:1200px; max-width:800px; height:auto; width:auto;\"\n                src=\"{{ item.contentUrl}}\" \n                alt=\"{{ item.name }}\"  \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% elsif item.image %}\n        <div class=\" me-2 bg-label-secondary\">\n            \n            <img\n                style=\"max-height:1200px; max-width:800px; height:auto; width:auto;\"\n                src=\"{{ item.image.contentUrl }}\" \n                alt=\"{{ item.image.name }}\" \n                onerror='this.style.display = \"none\"'\n                >\n        \n        </div>\n\n\n    {% endif %}\n\n    `\n}","\nimport { KrakenSchemas } from 'krakenschema'\n\n\nimport { KrThingElement } from '../../baseElements/KrThingElement/KrThingElement.js'\n\nimport { formSm } from './template/formSm.js'\n\n\nexport class KrFormSm extends KrThingElement {\n    constructor() {\n        super();\n\n        // Override template\n        this.htmlTemplate = formSm()\n\n\n    }\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject() {\n\n        //\n        if(!this.record_type || this.record_type === null || typeof this.record_type == \"undefined\"){ return }\n        \n        \n        if(!this.thing) { \n            this.record = {\"@type\": this.record_type, \"@id\": String(crypto.randomUUID())}\n        }\n        \n        this.config.recordTypes = this.thing.schema?.expectedTypes\n        this.config.properties= []\n\n        console.log('a', this.thing, this.thing.schema)\n        for(let p of this?.thing?.schema?.propertiesLight || []){\n            this.config.properties.push(p?.record_id)\n        }\n        \n        \n        await super.initObject()\n       \n    }\n\n\n\n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    setEventListenerDrag(){\n\n        this.draggable=true\n        this.addEventListener('dragstart', event =>{\n\n            event.preventDefault()\n            event.dataTransfer.setData('text', JSON.stringify(this.record, null, 4))\n\n        })\n    }\n\n\n    connectedCallback() {\n        super.connectedCallback()\n        //this.initObject()\n\n    }\n\n\n\n\n\n\n\n\n}\n\ncustomElements.define(\"kr-form-sm\", KrFormSm);\n\n\n","\n\nexport function formSm() {\n\n    return `\n    <div class=\"container-md\">\n        <form>\n\n\n\n            <kr-form-input data-property-id=\"@type\">\n                </kr-form-input>\n\n            <kr-form-input data-property-id=\"@id\">\n                </kr-form-input>\n\n\n            {% for p in config.properties %}\n\n                <kr-form-input data-property-id=\"{{p}}\">\n                </kr-form-input>\n              \n\n\n            {% endfor %}\n              \n              \n              \n        </form>\n        </div>\n`\n\n}\n\n","\nimport { KrPropertyElement } from '../../baseElements/KrPropertyElement/KrPropertyElement.js'\n\nimport { KrValueElement } from '../../baseElements/KrValueElement/KrValueElement.js'\n\n\nimport { formInput } from './template/formInput.js'\n\n\nlet DEFAULTLOCALE = \"en-US\"\n\n\n\nexport class KrFormInput extends KrPropertyElement {\n    constructor() {\n        super();\n\n\n        // Override template\n        this.htmlTemplate = formInput()\n\n\n        // \n        //this._isSelected = false\n        //this.setEventListenerDrag()\n\n    }\n\n\n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject() {\n\n        //\n        \n        await super.initObject()\n    }\n\n\n\n\n\n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    setEventListenerDrag(){\n\n        this.draggable=true\n        this.addEventListener('dragstart', event =>{\n            event.preventDefault()\n            event.dataTransfer.setData('text', JSON.stringify(this.record, null, 4))\n        })\n    }\n\n}\n\ncustomElements.define(\"kr-form-input\", KrFormInput);\n\n\n","\n\n\nexport function formInput(){\n\n    return `\n\n        <div class=\"mb-3\">\n\n\n\n            <div class=\"row\">\n                \n               \n                <div class=\"col-6  col-md-2\">\n                        <label for=\"{{ config.propertyID }}\" class=\"form-label text-capitalize\">{{ config.propertyID }}</label>\n                </div>\n                \n                \n                <div class=\"col-12  order-4 col-md-9 order-md-2\">\n                        {% if item.first %}\n                            {% for r in item %}\n\n                                <div class=\"row\">\n                                    <div class=\"col col-12 col-md-1\"> \n                                        <h6>{{forloop.index0}}</h6>\n                                    </div>\n                                    <div class=\"col col-12 col-md-11\">\n                                            \n                                        <kr-form-input-value data-property-id=\"{{ config.propertyID }}\"  data-position=\"{{forloop.index0}}\"> </kr-form-input-value>\n                                           \n                                    </div>\n                                </div>\n                            {% endfor %}\n                \n                        {% else %}\n                \n                            <kr-form-input-value data-property-id=\"{{ config.propertyID }}\"  data-position=\"0\"> </kr-form-input-value>\n                \n                        {% endif %}\n                \n                </div>\n                \n                \n \n\n\n                \n                <div class=\"col order-3 justify-content-end text-end\">\n                        <span class=\"kr-add justify-content-end\">\n\n\n                            <kr-action data-action-name=\"addPropertyValueAction\">\n\n                            </kr-action>\n                        \n                            \n                        </span>\n                </div>\n            </div>\n        </div>\n                \n\n    `\n\n\n    \n}","\nimport { KrakenSchemas } from 'krakenschema'\n\n\nimport { KrValueElement } from '../../baseElements/KrValueElement/KrValueElement.js'\n\n\n\nlet DEFAULTLOCALE = \"en-US\"\n\n\n\nexport class KrFormInputValue extends KrValueElement {\n    constructor() {\n        super();\n\n\n        // Override template\n        //this.htmlTemplate = avatar()\n\n\n        // \n        //this._isSelected = false\n        //this.setEventListenerDrag()\n        \n\n    }\n\n\n\n\n    // -----------------------------------------------------\n    //  Attr \n    // -----------------------------------------------------\n\n    get propertyName(){\n\n        let propertyName = this.krakenSchema?.getLocalizedPropertyID(DEFAULTLOCALE, this.propertyID) || this.propertyID\n        propertyName = propertyName.replace(/([A-Z])/g, \" $1\");\n        return propertyName\n    }\n    \n\n    // -----------------------------------------------------\n    //  Init \n    // -----------------------------------------------------\n\n    async initObject() {\n\n        //\n        console.log('init property')\n        await super.initObject()\n        this.setEventListenerValue()\n        \n        this.krakenSchema = KrakenSchemas.get(this.propertyID);\n\n\n\n        let enumerations = this.krakenSchema?.expectedType?.enumerationItems || []\n    \n        if(this.propertyID == \"@type\"){\n            // Handle record_type\n            this.innerHTML = this.getHtmlRecordType()\n        }\n        \n        else if(enumerations.length > 0){\n            // Handle enumerations\n            this.innerHTML = this.getHtmlEnumeration()\n        \n        } else if (this.krakenSchema?.expectedType?.htmlType == \"object\"){\n            this.innerHTML = this.getHtmlObject()\n\n        } else {\n            this.innerHTML = this.getHtmlSimple()\n        }\n    }\n\n\n    \n    \n\n\n    getHtmlSimple(){\n        return `\n        \n            <input type=\"${this.krakenSchema?.expectedType.htmlType}\" class=\"kr-value-item form-control\" id=\"exampleInputPassword1\" value=\"${this.value || \"\"}\"  >\n       `\n    }\n\n\n    getHtmlRecordType(){\n\n        let enumerations\n\n        let parentProperty = this.thing.closest('kr-property')\n        if (parentProperty){\n             enumerations = parentProperty.krakenSchema?.expectedTypes || []\n        \n        } else {\n\n             enumerations = KrakenSchemas.get(\"Thing\").record_types || []\n            \n        }\n\n        \n        \n        let enums = []\n\n        for (let e of enumerations){\n            enums.push(`<option value=\"${e}\">${e}</option>`)\n        }\n\n        let id = String(crypto.randomUUID())\n        return `\n        \n        <input class=\"kr-value-item form-control\" list=\"datalist_${id}\" aria-label=\"Default select example\" value=\"${this.value}\">\n              <datalist id=\"datalist_${id}\">\n             ${enums.join('')}\n                </datalist>\n            </input>\n          `\n\n    }\n\n\n\n    \n    getHtmlEnumeration(){\n\n        \n        let enumerations = this.krakenSchema.expectedType?.enumerationItems || []\n        let enums = []\n\n        for (let e of enumerations){\n            enums.push(`<option value=\"${e.name}\">${e.name}</option>`)\n        }\n\n        \n        return `\n       \n        <select class=\"kr-value-item form-select\" aria-label=\"Default select example\" value=\"${this.value}\">\n              <option selected></option>\n              ${enums.join('')}\n            </select>\n      `\n        \n    }\n\n\n    getHtmlObject(){\n       return  `\n       \n        <div class=\"ms-5\">\n            <kr-form-sm data-record-type=\"${this.krakenSchema.expectedType.record_id}\"></kr-form-sm></div>\n           `\n    }\n\n    \n    // -----------------------------------------------------\n    //  Custom Element Events \n    // -----------------------------------------------------\n\n    setEventListenerDrag(){\n\n        this.draggable=true\n        this.addEventListener('dragstart', event =>{\n            event.preventDefault()\n            event.dataTransfer.setData('text', JSON.stringify(this.record, null, 4))\n        })\n    }\n\n    setEventListenerValue(){\n\n        this.addEventListener('input', event =>{\n            \n            //this.replacePropertyValueAction(event.target.value, false)\n        })\n    }\n\n}\n\ncustomElements.define(\"kr-form-input-value\", KrFormInputValue);\n\n\n"],"names":[],"version":3,"file":"main.js.map"}